var N=s=>{throw TypeError(s)};var y=(s,t,i)=>t.has(s)||N("Cannot "+i);var e=(s,t,i)=>(y(s,t,"read from private field"),i?i.call(s):t.get(s)),l=(s,t,i)=>t.has(s)?N("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(s):t.set(s,i),f=(s,t,i,n)=>(y(s,t,"write to private field"),n?n.call(s,i):t.set(s,i),i),h=(s,t,i)=>(y(s,t,"access private method"),i);import{R as U,l as q,n as z}from"./QueryClientProvider-kVcQyYS3.js";var r,a,c,u,d,j,K=(j=class extends U{constructor(t){super();l(this,u);l(this,r);l(this,a);l(this,c);this.mutationId=t.mutationId,f(this,a,t.mutationCache),f(this,r,[]),this.state=t.state||B(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options=t,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){e(this,r).includes(t)||(e(this,r).push(t),this.clearGcTimeout(),e(this,a).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){f(this,r,e(this,r).filter(i=>i!==t)),this.scheduleGc(),e(this,a).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){e(this,r).length||(this.state.status==="pending"?this.scheduleGc():e(this,a).remove(this))}continue(){var t;return((t=e(this,c))==null?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){var m,x,w,g,R,C,P,M,S,v,G,D,E,F,O,A,T,b,k,I;f(this,c,q({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(o,p)=>{h(this,u,d).call(this,{type:"failed",failureCount:o,error:p})},onPause:()=>{h(this,u,d).call(this,{type:"pause"})},onContinue:()=>{h(this,u,d).call(this,{type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>e(this,a).canRun(this)}));const i=this.state.status==="pending",n=!e(this,c).canStart();try{if(!i){h(this,u,d).call(this,{type:"pending",variables:t,isPaused:n}),await((x=(m=e(this,a).config).onMutate)==null?void 0:x.call(m,t,this));const p=await((g=(w=this.options).onMutate)==null?void 0:g.call(w,t));p!==this.state.context&&h(this,u,d).call(this,{type:"pending",context:p,variables:t,isPaused:n})}const o=await e(this,c).start();return await((C=(R=e(this,a).config).onSuccess)==null?void 0:C.call(R,o,t,this.state.context,this)),await((M=(P=this.options).onSuccess)==null?void 0:M.call(P,o,t,this.state.context)),await((v=(S=e(this,a).config).onSettled)==null?void 0:v.call(S,o,null,this.state.variables,this.state.context,this)),await((D=(G=this.options).onSettled)==null?void 0:D.call(G,o,null,t,this.state.context)),h(this,u,d).call(this,{type:"success",data:o}),o}catch(o){try{throw await((F=(E=e(this,a).config).onError)==null?void 0:F.call(E,o,t,this.state.context,this)),await((A=(O=this.options).onError)==null?void 0:A.call(O,o,t,this.state.context)),await((b=(T=e(this,a).config).onSettled)==null?void 0:b.call(T,void 0,o,this.state.variables,this.state.context,this)),await((I=(k=this.options).onSettled)==null?void 0:I.call(k,void 0,o,t,this.state.context)),o}finally{h(this,u,d).call(this,{type:"error",error:o})}}finally{e(this,a).runNext(this)}}},r=new WeakMap,a=new WeakMap,c=new WeakMap,u=new WeakSet,d=function(t){const i=n=>{switch(t.type){case"failed":return{...n,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...n,isPaused:!0};case"continue":return{...n,isPaused:!1};case"pending":return{...n,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:t.isPaused,status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...n,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...n,data:void 0,error:t.error,failureCount:n.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=i(this.state),z.batch(()=>{e(this,r).forEach(n=>{n.onMutationUpdate(t)}),e(this,a).notify({mutation:this,type:"updated",action:t})})},j);function B(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}export{K as M,B as g};
