name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main

env:
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/superligfr-backend:latest
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/superligfr-frontend:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      # Clone le repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Debug Secrets (Optionnel)
      - name: Debug Secrets
        run: |
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}"
          echo "FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}"

      # Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build et push backend
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.BACKEND_IMAGE }}
          target: backend

      # Build et push frontend
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}
          target: frontend

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      # Test Connexion SSH (Débogage)
      - name: Test SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > test_key
          chmod 600 test_key
          ssh -i test_key -o StrictHostKeyChecking=no root@${{ secrets.VPS_IP }} "echo 'SSH connection successful'"

      # Déploiement avec Debug Activé
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true # Active les logs détaillés
          script: |
            echo "Connecté au VPS !"
            cd ~/super-lig-france
            docker stack deploy -c docker-compose.yml superligfr
